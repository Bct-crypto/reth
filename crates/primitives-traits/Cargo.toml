[package]
name = "reth-primitives-traits"
version.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "Reth abstraction of EVM data primitives."

[lints]
workspace = true

[dependencies]
# reth
reth-codecs.workspace = true

# ethereum
alloy-consensus.workspace = true
alloy-eips.workspace = true
alloy-genesis.workspace = true
alloy-primitives.workspace = true
alloy-rlp.workspace = true
revm-primitives.workspace = true

# async
once_cell.workspace = true

# io
rayon.workspace = true

# codec
byteorder = "1"
roaring = "0.10.2"
serde.workspace = true
serde_with = { workspace = true, optional = true }
bytes.workspace = true
modular-bitfield.workspace = true

# misc
derive_more.workspace = true
auto_impl.workspace = true

# test-utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
proptest = { workspace = true, optional = true }
proptest-arbitrary-interop = { workspace = true, optional = true }

[dev-dependencies]
alloy-primitives = { workspace = true, features = ["arbitrary"] }
alloy-consensus = { workspace = true, features = ["arbitrary"] }

bincode.workspace = true
proptest-arbitrary-interop.workspace = true
proptest.workspace = true
rand.workspace = true
serde_json.workspace = true
test-fuzz.workspace = true

[features]
default = ["std"]
std = [
	"alloy-consensus/std",
	"alloy-eips/std",
	"alloy-genesis/std",
	"alloy-primitives/std",
	"revm-primitives/std",
	"serde/std",
	"once_cell/std",
]
test-utils = [
	"arbitrary",
	"reth-codecs/test-utils"
]
arbitrary = [
	"std",
	"alloy-consensus/arbitrary",
	"alloy-primitives/arbitrary",
	"dep:arbitrary",
	"dep:proptest",
	"dep:proptest-arbitrary-interop",
	"alloy-eips/arbitrary",
	"revm-primitives/arbitrary",
	"reth-codecs/arbitrary"
]
serde-bincode-compat = [
	"serde",
	"serde_with",
	"alloy-consensus/serde-bincode-compat",
	"alloy-eips/serde-bincode-compat"
]
serde = [
	"alloy-consensus/serde",
    "alloy-eips/serde",
    "alloy-primitives/serde",
    "bytes/serde",
    "rand/serde",
    "reth-codecs/serde",
    "revm-primitives/serde",
    "roaring/serde",
	"revm-primitives/serde",
]